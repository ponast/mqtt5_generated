// Generated by commsdsl2comms v4.0.0

/// @file
/// @brief Contains definition of protocol bare metal default options.

#pragma once

#include "mqtt5/options/DefaultOptions.h"

#ifndef DEFAULT_SEQ_FIXED_STORAGE_SIZE
/// @brief Define default fixed size for various sequence fields
/// @details May be defined during compile time to change the default value.
#define DEFAULT_SEQ_FIXED_STORAGE_SIZE 32
#endif

namespace mqtt5
{

namespace options
{

/// @brief Default bare metal options of the protocol.
template <typename TBase = mqtt5::options::DefaultOptions>
struct BareMetalDefaultOptionsT : public TBase
{
    /// @brief Extra options for fields.
    struct field : public TBase::field
    {
        /// @brief Extra options for @ref
        ///     mqtt5::field::AuthProperties field.
        using AuthProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::AuthProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::BinData field.
        using BinData =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::BinData
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::ClientDisconnectProperties
        ///     field.
        using ClientDisconnectProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::ClientDisconnectProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::ConnackProperties field.
        using ConnackProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::ConnackProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::ConnectProperties field.
        using ConnectProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::ConnectProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::ProtocolName field.
        using ProtocolName =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::ProtocolName
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::PubackProperties field.
        using PubackProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::PubackProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::PublishProperties field.
        using PublishProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::PublishProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::ServerDisconnectProperties
        ///     field.
        using ServerDisconnectProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::ServerDisconnectProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::SubackPayload field.
        using SubackPayload =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::SubackPayload
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::SubscribePayload field.
        using SubscribePayload =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::SubscribePayload
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::SubscribeProperties field.
        using SubscribeProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::SubscribeProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::UnsubackPayload field.
        using UnsubackPayload =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::UnsubackPayload
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::UnsubscribePayload field.
        using UnsubscribePayload =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::UnsubscribePayload
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::UnsubscribeProperties
        ///     field.
        using UnsubscribeProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::UnsubscribeProperties
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::Utf8String field.
        using Utf8String =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::Utf8String
            >;

        /// @brief Extra options for @ref
        ///     mqtt5::field::WillProperties field.
        using WillProperties =
            std::tuple<
                comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                typename TBase::field::WillProperties
            >;

    }; // struct field

    /// @brief Extra options for messages.
    struct message : public TBase::message
    {
        /// @brief Extra options for fields of
        ///     @ref mqtt5::message::Publish message.
        struct PublishFields : public TBase::message::PublishFields
        {
            /// @brief Extra options for @ref
            ///     mqtt5::message::PublishFields::Payload
            ///     field.
            using Payload =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::PublishFields::Payload
                >;

        };

    }; // struct message

    /// @brief Extra options for frames.
    struct frame : public TBase::frame
    {
        /// @brief Extra options for layers of
        ///     @ref mqtt5::frame::Frame frame.
        struct FrameLayers : public TBase::frame::FrameLayers
        {
            /// @brief Extra options for @ref
            ///     mqtt5::frame::FrameLayers::Data layer.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE * 8>,
                    typename TBase::frame::FrameLayers::Data
                >;


        }; // struct FrameLayers

    }; // struct frame


};

/// @brief Alias to @ref BareMetalDefaultOptionsT with default template parameter.
using BareMetalDefaultOptions = BareMetalDefaultOptionsT<>;

} // namespace options

} // namespace mqtt5
