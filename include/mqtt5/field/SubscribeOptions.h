// Generated by commsdsl2comms v5.0.0

/// @file
/// @brief Contains definition of <b>"SubscribeOptions"</b> field.

#pragma once

#include <cstdint>
#include <tuple>
#include "comms/field/Bitfield.h"
#include "comms/field/BitmaskValue.h"
#include "comms/field/EnumValue.h"
#include "comms/field/IntValue.h"
#include "comms/options.h"
#include "mqtt5/field/FieldBase.h"
#include "mqtt5/field/Qos.h"
#include "mqtt5/field/SubscribeOptionsCommon.h"
#include "mqtt5/options/DefaultOptions.h"

namespace mqtt5
{

namespace field
{

/// @brief Scope for all the member fields of
///     @ref SubscribeOptions field.
/// @tparam TOpt Protocol options.
template <typename TOpt = mqtt5::options::DefaultOptions>
struct SubscribeOptionsMembers
{
    /// @brief Definition of <b>"MaxQos"</b> field.
    class MaxQos : public
        mqtt5::field::Qos<
            TOpt,
            comms::option::def::FixedBitLength<2U>
        >
    {
        using Base =
            mqtt5::field::Qos<
                TOpt,
                comms::option::def::FixedBitLength<2U>
            >;
    public:
        /// @brief Name of the field.
        static const char* name()
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::MaxQosCommon::name();
        }
    };

    /// @brief Definition of <b>""</b> field.
    class Bits : public
        comms::field::BitmaskValue<
            mqtt5::field::FieldBase<>,
            comms::option::def::FixedBitLength<2U>
        >
    {
        using Base =
            comms::field::BitmaskValue<
                mqtt5::field::FieldBase<>,
                comms::option::def::FixedBitLength<2U>
            >;
    public:
        /// @brief Provides names and generates access functions for internal bits.
        /// @details See definition of @b COMMS_BITMASK_BITS_SEQ macro
        ///     related to @b comms::field::BitmaskValue class from COMMS library
        ///     for details.
        ///
        ///      The generated enum values and functions are:
        ///      @li @b BitIdx_NoLocal, @b getBitValue_NoLocal() and @b setBitValue_NoLocal().
        ///      @li @b BitIdx_RetainAsPublished, @b getBitValue_RetainAsPublished() and @b setBitValue_RetainAsPublished().
        COMMS_BITMASK_BITS_SEQ(
            NoLocal,
            RetainAsPublished
        );

        /// @brief Retrieve name of the bit.
        /// @see @ref mqtt5::field::SubscribeOptionsMembersCommon::BitsCommon::bitName().
        static const char* bitName(BitIdx idx)
        {
            return
                mqtt5::field::SubscribeOptionsMembersCommon::BitsCommon::bitName(
                    static_cast<std::size_t>(idx));
        }

        /// @brief Name of the field.
        static const char* name()
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::BitsCommon::name();
        }
    };

    /// @brief Definition of <b>"RetainHandling"</b> field.
    /// @see @ref mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::ValueType
    class RetainHandling : public
        comms::field::EnumValue<
            mqtt5::field::FieldBase<>,
            mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::ValueType,
            comms::option::def::FixedBitLength<2U>,
            comms::option::def::ValidNumValueRange<0, 2>
        >
    {
        using Base =
            comms::field::EnumValue<
                mqtt5::field::FieldBase<>,
                mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::ValueType,
                comms::option::def::FixedBitLength<2U>,
                comms::option::def::ValidNumValueRange<0, 2>
            >;
    public:
        /// @brief Re-definition of the value type.
        using ValueType = typename Base::ValueType;

        /// @brief Single value name info entry.
        using ValueNameInfo = mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::ValueNameInfo;

        /// @brief Type returned from @ref valueNamesMap() member function.
        /// @see @ref mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::ValueNamesMapInfo.
        using ValueNamesMapInfo = mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::ValueNamesMapInfo;

        /// @brief Retrieve name of the enum value.
        /// @see @ref mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::valueName().
        static const char* valueName(ValueType val)
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::valueName(val);
        }

        /// @brief Retrieve name of the @b current value
        const char* valueName() const
        {
            return valueName(Base::getValue());
        }

        /// @brief Retrieve map of enum value names.
        /// @see @ref mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::valueNamesMap().
        static ValueNamesMapInfo valueNamesMap()
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::valueNamesMap();
        }

        /// @brief Name of the field.
        static const char* name()
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::RetainHandlingCommon::name();
        }
    };

    /// @brief Definition of <b>"Reserved"</b> field.
    class Reserved : public
        comms::field::IntValue<
            mqtt5::field::FieldBase<>,
            std::uint8_t,
            comms::option::def::FixedBitLength<2U>,
            comms::option::def::ValidNumValue<0>
        >
    {
        using Base =
            comms::field::IntValue<
                mqtt5::field::FieldBase<>,
                std::uint8_t,
                comms::option::def::FixedBitLength<2U>,
                comms::option::def::ValidNumValue<0>
            >;
    public:
        /// @brief Re-definition of the value type.
        using ValueType = typename Base::ValueType;

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::ReservedCommon::hasSpecials();
        }

        /// @brief Name of the field.
        static const char* name()
        {
            return mqtt5::field::SubscribeOptionsMembersCommon::ReservedCommon::name();
        }
    };

    /// @brief All members bundled in @b std::tuple.
    using All =
        std::tuple<
           MaxQos,
           Bits,
           RetainHandling,
           Reserved
        >;
};

/// @brief Definition of <b>"SubscribeOptions"</b> field.
/// @details
///     Defined in section 3.8.3.1.
/// @tparam TOpt Protocol options.
/// @tparam TExtraOpts Extra options.
template <typename TOpt = mqtt5::options::DefaultOptions, typename... TExtraOpts>
class SubscribeOptions : public
    comms::field::Bitfield<
        mqtt5::field::FieldBase<>,
        typename SubscribeOptionsMembers<TOpt>::All,
        TExtraOpts...
    >
{
    using Base =
        comms::field::Bitfield<
            mqtt5::field::FieldBase<>,
            typename SubscribeOptionsMembers<TOpt>::All,
            TExtraOpts...
        >;
public:
    /// @brief Allow access to internal fields.
    /// @details See definition of @b COMMS_FIELD_MEMBERS_NAMES macro
    ///     related to @b comms::field::Bitfield class from COMMS library
    ///     for details.
    ///
    ///     The generated values, types and access functions are:
    ///     @li @b FieldIdx_maxQos index, @b Field_maxQos type and @b field_maxQos() access function -
    ///         for mqtt5::field::SubscribeOptionsMembers::MaxQos member field.
    ///     @li @b FieldIdx_bits index, @b Field_bits type and @b field_bits() access function -
    ///         for mqtt5::field::SubscribeOptionsMembers::Bits member field.
    ///     @li @b FieldIdx_retainHandling index, @b Field_retainHandling type and @b field_retainHandling() access function -
    ///         for mqtt5::field::SubscribeOptionsMembers::RetainHandling member field.
    ///     @li @b FieldIdx_reserved index, @b Field_reserved type and @b field_reserved() access function -
    ///         for mqtt5::field::SubscribeOptionsMembers::Reserved member field.
    COMMS_FIELD_MEMBERS_NAMES(
        maxQos,
        bits,
        retainHandling,
        reserved
    );

    /// @brief Name of the field.
    static const char* name()
    {
        return mqtt5::field::SubscribeOptionsCommon::name();
    }
};

} // namespace field

} // namespace mqtt5
