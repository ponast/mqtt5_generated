// Generated by commsdsl2comms v4.0.0

/// @file
/// @brief Contains definition of <b>"String"</b> field.

#pragma once

#include "comms/field/String.h"
#include "comms/options.h"
#include "mqtt5/field/FieldBase.h"
#include "mqtt5/field/Length.h"
#include "mqtt5/field/StringCommon.h"
#include "mqtt5/options/DefaultOptions.h"

#include "external/utf8_validation.h"

namespace mqtt5
{

namespace field
{


/// @brief Definition of <b>"String"</b> field.
/// @tparam TOpt Protocol options.
/// @tparam TExtraOpts Extra options.
template <typename TOpt = mqtt5::options::DefaultOptions, typename... TExtraOpts>
class String : public
    comms::field::String<
        mqtt5::field::FieldBase<>,
        TExtraOpts...,
        typename TOpt::field::String,
        comms::option::def::SequenceSerLengthFieldPrefix<mqtt5::field::Length<TOpt> >
    >
{
    using Base =
        comms::field::String<
            mqtt5::field::FieldBase<>,
            TExtraOpts...,
            typename TOpt::field::String,
            comms::option::def::SequenceSerLengthFieldPrefix<mqtt5::field::Length<TOpt> >
        >;
public:
    /// @brief Name of the field.
    static const char* name()
    {
        return mqtt5::field::StringCommon::name();
    }
    
    /// @brief Custom validity check
    bool valid() const
    {
        return ::utf8::valid_mqtt_string( String().value().c_str() );
    }
    
    

};


} // namespace field

} // namespace mqtt5

