// Generated by commsdsl2comms v4.0.0

/// @file
/// @brief Contains definition of <b>"PacketIdentifier"</b> field.

#pragma once

#include <cstdint>
#include "comms/field/IntValue.h"
#include "comms/options.h"
#include "mqtt5/field/FieldBase.h"
#include "mqtt5/field/PacketIdentifierCommon.h"
#include "mqtt5/options/DefaultOptions.h"

namespace mqtt5
{

namespace field
{


/// @brief Definition of <b>"PacketIdentifier"</b> field.
/// @details
///     Defined in section 2.2.1
/// @tparam TOpt Protocol options.
/// @tparam TExtraOpts Extra options.
template <typename TOpt = mqtt5::options::DefaultOptions, typename... TExtraOpts>
class PacketIdentifier : public
    comms::field::IntValue<
        mqtt5::field::FieldBase<comms::option::def::LittleEndian>,
        std::uint16_t,
        TExtraOpts...,
        comms::option::def::UnitsBytes
    >
{
    using Base =
        comms::field::IntValue<
            mqtt5::field::FieldBase<comms::option::def::LittleEndian>,
            std::uint16_t,
            TExtraOpts...,
            comms::option::def::UnitsBytes
        >;
public:
    /// @brief Re-definition of the value type.
    using ValueType = typename Base::ValueType;

    /// @brief Compile time detection of special values presence.
    static constexpr bool hasSpecials()
    {
        return mqtt5::field::PacketIdentifierCommon::hasSpecials();
    }


    /// @brief Name of the field.
    static const char* name()
    {
        return mqtt5::field::PacketIdentifierCommon::name();
    }


};


} // namespace field

} // namespace mqtt5

